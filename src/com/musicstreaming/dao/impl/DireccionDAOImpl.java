package com.musicstreaming.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.musicstreaming.dao.DireccionDAO;
import com.musicstreaming.model.Direccion;
import com.musicstreaming.streaming.dao.util.JDBCUtils;
import com.musicstreaming.streaming.exceptions.DataException;
import com.musicstreaming.streaming.exceptions.DuplicateInstanceException;

public class DireccionDAOImpl implements DireccionDAO {
	
	public DireccionDAOImpl() {}
	
	@Override
	public Direccion create(Connection connection, Direccion d) 
     		throws DuplicateInstanceException, DataException{
		
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		try {          
			
			String queryString = "INSERT INTO DIRECCION(DIRECCION, COD_PROVINCIA, COD_USUARIO)"
					+ "VALUES (?, ?, ?)";

			preparedStatement = connection.prepareStatement(queryString,
					Statement.RETURN_GENERATED_KEYS);
			
			int i = 1;     
			preparedStatement.setString(i++,d.getDireccion());
			preparedStatement.setLong(i++, d.getCodProvincia());
			preparedStatement.setLong(i++, d.getCodUsuario());

			int insertedRows = preparedStatement.executeUpdate();

			if (insertedRows == 0) {
				throw new SQLException("Can not add row to table 'Direccion'");
			} 
			
			
			resultSet = preparedStatement.getGeneratedKeys();
			if (resultSet.next()) {
				Long pk = resultSet.getLong(1); 
				d.setCodDireccion(pk);
			} else {
				throw new DataException("Unable to fetch autogenerated primary key");
			}
			
			return d;

		} catch (SQLException e) {
			throw new DataException(e);
		} finally {
			JDBCUtils.closeStatement(preparedStatement);
		}
		
		
	}

	
}
